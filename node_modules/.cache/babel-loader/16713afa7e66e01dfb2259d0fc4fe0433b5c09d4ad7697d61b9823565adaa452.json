{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\clientViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './clientViewer.css';\nimport logo from './Saint-Gobain_SEFPRO_logo_2023.png';\nimport ProgBar from './ProgBar';\nimport ProgPerc from './ProgPerc';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClientViewer({\n  userID\n}) {\n  _s();\n  const [showDialog, setShowDialog] = useState(false);\n  const [percentage, setPercentage] = useState(0);\n  const navigate = useNavigate();\n  const openDialog = () => {\n    navigate('/login');\n  };\n  const closeDialog = () => {\n    setShowDialog(false);\n  };\n  useEffect(() => {\n    // Fetch the percentage from the server when the client logs in\n    // You can make an API request to your server here\n\n    // For example, using the fetch API with the userID from props\n    fetch(`/api/getPercentage?userID=${userID}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      // Update the percentage value in the state\n      setPercentage(data.percentage);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [userID]); // This effect runs whenever the userID prop changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          style: {\n            width: '170px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pages\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"home\",\n          style: {\n            color: '#00C7C8'\n          },\n          children: \"Track Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout\",\n          style: {\n            marginRight: '1%'\n          },\n          onClick: () => setShowDialog(true),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), showDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"confirmLogout\",\n        children: \"Confirm Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openDialog,\n          children: \"YES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"yesbtn\",\n          onClick: closeDialog,\n          children: \"NO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actperc\",\n      children: /*#__PURE__*/_jsxDEV(ProgPerc, {\n        calculatedValue: percentage,\n        maxValue: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actblock\",\n      children: /*#__PURE__*/_jsxDEV(ProgBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientViewer, \"rXlpW/y19WaBDwG66oAhzjP0p1Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientViewer;\nexport default ClientViewer;\nvar _c;\n$RefreshReg$(_c, \"ClientViewer\");","map":{"version":3,"names":["React","useState","useEffect","logo","ProgBar","ProgPerc","useNavigate","jsxDEV","_jsxDEV","ClientViewer","userID","_s","showDialog","setShowDialog","percentage","setPercentage","navigate","openDialog","closeDialog","fetch","method","headers","then","response","json","data","catch","error","console","className","children","style","display","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","color","marginRight","onClick","calculatedValue","maxValue","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/clientViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './clientViewer.css';\r\nimport logo from './Saint-Gobain_SEFPRO_logo_2023.png';\r\nimport ProgBar from './ProgBar';\r\nimport ProgPerc from './ProgPerc';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ClientViewer({ userID }) {\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const navigate = useNavigate();\r\n    const openDialog = () => {\r\n        navigate('/login');\r\n      };\r\n  const closeDialog = () => {\r\n    setShowDialog(false);\r\n  };\r\n  useEffect(() => {\r\n    // Fetch the percentage from the server when the client logs in\r\n    // You can make an API request to your server here\r\n\r\n    // For example, using the fetch API with the userID from props\r\n    fetch(`/api/getPercentage?userID=${userID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Update the percentage value in the state\r\n        setPercentage(data.percentage);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [userID]); // This effect runs whenever the userID prop changes\r\n\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <div className=\"Header\" style={{ display: 'flex' }}>\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"logo\" style={{ width: '170px', height: '100px' }} />\r\n        </div>\r\n        <div className=\"pages\">\r\n          <p className='home' style={{ color: '#00C7C8' }}>Track Progress</p>\r\n        </div>\r\n        <div >\r\n            <button className=\"logout\" style={{ marginRight: '1%' }} onClick={() => setShowDialog(true)}>\r\n          Logout</button>\r\n        </div>\r\n      </div>\r\n      {showDialog && (\r\n      <div className=\"dialog\">\r\n        <label className='confirmLogout'>Confirm Logout</label>\r\n        <div className='buttons'>\r\n        <button onClick={openDialog}>YES</button>\r\n        <button className='yesbtn' onClick={closeDialog}>NO</button>\r\n        </div>\r\n      </div>\r\n    )}\r\n        <div className=\"view\">\r\n          \r\n        </div>\r\n        <div className=\"actperc\">\r\n        <ProgPerc calculatedValue={percentage} maxValue={100} />\r\n        </div>\r\n        <div className=\"actblock\">\r\n          <ProgBar/> \r\n        </div>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default ClientViewer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
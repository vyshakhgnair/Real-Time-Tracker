{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\ActPerc.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ActPerc.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActPerc = ({\n  calculatedValue,\n  maxValue\n}) => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const progressPercentage = calculatedValue / maxValue * 100;\n  useEffect(() => {\n    setProgress(progressPercentage);\n  }, [calculatedValue, maxValue]);\n  const circumference = 2 * Math.PI * 45;\n  const dashArray = progress / 100 * circumference;\n  const dashOffset = circumference - dashArray;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circular-progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-box\",\n          style: {\n            backgroundColor: '#48f96e'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \"Completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-box\",\n          style: {\n            backgroundColor: '#c60505'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \"Pending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"circular-progress\",\n      viewBox: \"0 0 100 100\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"background-circle\",\n        cx: \"50\",\n        cy: \"50\",\n        r: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"progress-circle\",\n        cx: \"50\",\n        cy: \"50\",\n        r: \"45\",\n        strokeDasharray: `${dashArray} ${circumference}`,\n        strokeDashoffset: dashOffset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"50\",\n        y: \"55\",\n        className: \"percentage\",\n        transform: `rotate(90 50 50)`,\n        children: `${Math.round(progress)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ActPerc, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n_c = ActPerc;\nexport default ActPerc;\nvar _c;\n$RefreshReg$(_c, \"ActPerc\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ActPerc","calculatedValue","maxValue","_s","progress","setProgress","progressPercentage","circumference","Math","PI","dashArray","dashOffset","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","cx","cy","r","strokeDasharray","strokeDashoffset","x","y","transform","round","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/ActPerc.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ActPerc.css';\r\n\r\nconst ActPerc = ({ calculatedValue, maxValue }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const progressPercentage = (calculatedValue / maxValue) * 100;\r\n\r\n  useEffect(() => {\r\n    setProgress(progressPercentage);\r\n  }, [calculatedValue, maxValue]);\r\n\r\n  const circumference = 2 * Math.PI * 45;\r\n  const dashArray = (progress / 100) * circumference;\r\n  const dashOffset = circumference - dashArray;\r\n\r\n  return (\r\n    <div className=\"circular-progress-container\">\r\n      <div className=\"label-container\">\r\n        <div className=\"label1\">\r\n          <div className=\"color-box\" style={{ backgroundColor: '#48f96e' }}></div>\r\n          Completed\r\n        </div>\r\n        <div className=\"label2\">\r\n          <div className=\"color-box\" style={{ backgroundColor: '#c60505' }}></div>\r\n          Pending\r\n        </div>\r\n      </div>\r\n      <svg className=\"circular-progress\" viewBox=\"0 0 100 100\">\r\n        <circle\r\n          className=\"background-circle\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"45\"\r\n        />\r\n        <circle\r\n          className=\"progress-circle\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"45\"\r\n          strokeDasharray={`${dashArray} ${circumference}`}\r\n          strokeDashoffset={dashOffset}\r\n        />\r\n        <text x=\"50\" y=\"55\" className=\"percentage\" transform={`rotate(90 50 50)`}>\r\n          {`${Math.round(progress)}%`}\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActPerc;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMU,kBAAkB,GAAIL,eAAe,GAAGC,QAAQ,GAAI,GAAG;EAE7DL,SAAS,CAAC,MAAM;IACdQ,WAAW,CAACC,kBAAkB,CAAC;EACjC,CAAC,EAAE,CAACL,eAAe,EAAEC,QAAQ,CAAC,CAAC;EAE/B,MAAMK,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAG,EAAE;EACtC,MAAMC,SAAS,GAAIN,QAAQ,GAAG,GAAG,GAAIG,aAAa;EAClD,MAAMI,UAAU,GAAGJ,aAAa,GAAGG,SAAS;EAE5C,oBACEX,OAAA;IAAKa,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1Cd,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bd,OAAA;QAAKa,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBd,OAAA;UAAKa,SAAS,EAAC,WAAW;UAACE,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,aAE1E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpB,OAAA;QAAKa,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBd,OAAA;UAAKa,SAAS,EAAC,WAAW;UAACE,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,WAE1E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpB,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAACQ,OAAO,EAAC,aAAa;MAAAP,QAAA,gBACtDd,OAAA;QACEa,SAAS,EAAC,mBAAmB;QAC7BS,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC,IAAI;QACPC,CAAC,EAAC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACFpB,OAAA;QACEa,SAAS,EAAC,iBAAiB;QAC3BS,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC,IAAI;QACPC,CAAC,EAAC,IAAI;QACNC,eAAe,EAAG,GAAEd,SAAU,IAAGH,aAAc,EAAE;QACjDkB,gBAAgB,EAAEd;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFpB,OAAA;QAAM2B,CAAC,EAAC,IAAI;QAACC,CAAC,EAAC,IAAI;QAACf,SAAS,EAAC,YAAY;QAACgB,SAAS,EAAG,kBAAkB;QAAAf,QAAA,EACrE,GAAEL,IAAI,CAACqB,KAAK,CAACzB,QAAQ,CAAE;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9CIH,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAgDb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\ActBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ActBlock.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActBlock = ({\n  calculatedValue,\n  maxValue\n}) => {\n  _s();\n  const [progress, setProgress] = useState(0);\n\n  // Calculate the progress percentage based on the calculatedValue and maxValue\n  const progressPercentage = calculatedValue / maxValue * 100;\n\n  // Update the progress state when the calculatedValue changes\n  useEffect(() => {\n    setProgress(progressPercentage);\n  }, [calculatedValue, maxValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-box\",\n          style: {\n            backgroundColor: '#48f96e'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \"Assigned\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-box\",\n          style: {\n            backgroundColor: '#c60505'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \"Not Assigned\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"values-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"calculated-value\",\n        children: [\"Assigned Blocks : \", calculatedValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"max-value\",\n        children: [\"Total Blocks : \", maxValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ActBlock, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n_c = ActBlock;\nexport default ActBlock;\nvar _c;\n$RefreshReg$(_c, \"ActBlock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ActBlock","calculatedValue","maxValue","_s","progress","setProgress","progressPercentage","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/ActBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ActBlock.css'; // Import the CSS file for styling\r\n\r\nconst ActBlock = ({ calculatedValue, maxValue }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  // Calculate the progress percentage based on the calculatedValue and maxValue\r\n  const progressPercentage = (calculatedValue / maxValue) * 100;\r\n\r\n  // Update the progress state when the calculatedValue changes\r\n  useEffect(() => {\r\n    setProgress(progressPercentage);\r\n  }, [calculatedValue, maxValue]);\r\n\r\n  return (\r\n    <div className=\"progress-container\">\r\n        <div className=\"progress-bar\">\r\n            <div className=\"progress\" style={{ width: `${progress}%` }}></div>\r\n        </div>\r\n        <div className=\"label-container\">\r\n        <div className=\"label1\">\r\n          <div className=\"color-box\" style={{ backgroundColor: '#48f96e' }}></div>\r\n          Assigned\r\n        </div>\r\n        <div className=\"label2\">\r\n          <div className=\"color-box\" style={{ backgroundColor: '#c60505' }}></div>\r\n          Not Assigned\r\n          </div>\r\n      </div>\r\n      <div className=\"values-container\">\r\n        <span className=\"calculated-value\">Assigned Blocks : {calculatedValue}</span>\r\n        <span className=\"max-value\">Total Blocks : {maxValue}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActBlock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAMU,kBAAkB,GAAIL,eAAe,GAAGC,QAAQ,GAAI,GAAG;;EAE7D;EACAL,SAAS,CAAC,MAAM;IACdQ,WAAW,CAACC,kBAAkB,CAAC;EACjC,CAAC,EAAE,CAACL,eAAe,EAAEC,QAAQ,CAAC,CAAC;EAE/B,oBACEH,OAAA;IAAKQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BT,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzBT,OAAA;QAAKQ,SAAS,EAAC,UAAU;QAACE,KAAK,EAAE;UAAEC,KAAK,EAAG,GAAEN,QAAS;QAAG;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACNf,OAAA;MAAKQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAChCT,OAAA;QAAKQ,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBT,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAACE,KAAK,EAAE;YAAEM,eAAe,EAAE;UAAU;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,YAE1E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNf,OAAA;QAAKQ,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBT,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAACE,KAAK,EAAE;YAAEM,eAAe,EAAE;UAAU;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAExE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNf,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BT,OAAA;QAAMQ,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAAC,oBAAkB,EAACP,eAAe;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7Ef,OAAA;QAAMQ,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,iBAAe,EAACN,QAAQ;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAhCIH,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
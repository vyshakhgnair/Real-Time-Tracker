{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\ColorTiles.js\";\nimport React, { Component } from 'react';\nimport './ColorTiles.css'; // Import your global CSS file\nimport Scanner from './scanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ColorTiles extends Component {\n  constructor(props) {\n    super(props);\n    this.openDialog = (buttonLabel, redNo) => {\n      // Fetch MNo and TrNo values from the database\n      fetch('http://localhost:5000/getBlockAttributes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          redNo\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          this.setState({\n            showDialog: true,\n            dialogData: {\n              label1: 'M Number',\n              value1: data.MNo || 'NULL',\n              label2: 'Traceability',\n              value2: data.TrNo || 'NULL',\n              buttonLabel\n            },\n            redNo\n          });\n        } else {\n          console.error('Error fetching block attributes:', data.error);\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n    this.closeDialog = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n    this.closeSubmissionDialog = () => {\n      this.setState({\n        showSubmissionDialog: false\n      });\n    };\n    this.toggleScanner = () => {\n      this.setState({\n        showDialog: false\n      });\n      this.setState({\n        showScanner: true\n      });\n    };\n    // Callback function to handle submission of firstValue and secondValue\n    this.handleSave = (redNo, firstValue, secondValue) => {\n      this.setState({\n        showScanner: false,\n        showSubmissionDialog: true,\n        submittedMNumber: firstValue,\n        submittedTraceability: secondValue,\n        redNoForSubmission: redNo\n      });\n\n      // Make a POST request to update the block attributes\n      fetch('http://localhost:5000/updateBlockAttributes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          redNo,\n          MNo: firstValue,\n          TrNo: secondValue\n        })\n      }).then(response => response.json()).then(data => {\n        // Handle success or error response, e.g., show a message to the user\n        console.log(data.message);\n\n        // Update the UI to reflect the rejection\n        this.setState(prevState => {\n          const updatedBlockStatus = prevState.blockStatus.map(block => {\n            if (block.RedNo === redNo) {\n              return {\n                ...block,\n                Status: 'Placed'\n              };\n            }\n            return block;\n          });\n          return {\n            blockStatus: updatedBlockStatus\n          };\n        });\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n    this.handleReject = redNo => {\n      this.setState({\n        showDialog: false\n      });\n      // Make a POST request to reject the block attributes\n      fetch('http://localhost:5000/rejectBlockAttributes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          redNo\n        })\n      }).then(response => response.json()).then(data => {\n        // Handle success or error response, e.g., show a message to the user\n        console.log(data.message);\n\n        // Update the UI to reflect the rejection\n        this.setState(prevState => {\n          const updatedBlockStatus = prevState.blockStatus.map(block => {\n            if (block.RedNo === redNo) {\n              return {\n                ...block,\n                Status: 'Not Placed'\n              };\n            }\n            return block;\n          });\n          return {\n            blockStatus: updatedBlockStatus\n          };\n        });\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n    this.state = {\n      number: '',\n      buttons: [],\n      showDialog: false,\n      dialogData: {},\n      showScanner: false,\n      showSubmissionDialog: false,\n      // New state for the submission dialog\n      submittedMNumber: '',\n      // State to store submitted M Number\n      submittedTraceability: '',\n      // State to store submitted Traceability\n      OAN: '',\n      blockStatus: []\n    };\n  }\n  async componentDidMount() {\n    // Fetch the total count of blocks from the database\n    const response = await fetch('http://localhost:5000/getTotalBlockCount'); // Replace with your server endpoint\n    const data = await response.json();\n    const redNoValues = data.redNoValues;\n\n    // Fetch block statuses for the specified OAN\n    const statusResponse = await fetch('http://localhost:5000/getBlockStatus'); // Replace with your server endpoint\n    const blockStatus = await statusResponse.json();\n\n    // Generate buttons based on the total block count\n    // const buttons = Array.from({ length: totalBlockCount }, (_, i) => i + 1);\n\n    this.setState({\n      buttons: redNoValues,\n      blockStatus: blockStatus\n    });\n  }\n  render() {\n    const {\n      buttons,\n      showDialog,\n      dialogData,\n      showScanner,\n      showSubmissionDialog,\n      blockStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ColorTiles\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: buttons.map((button, index) => {\n          // Find the status of the corresponding block\n          const block = blockStatus.find(block => block.RedNo === button);\n          const status = block ? block.Status : 'unknown';\n\n          // Determine the color based on the \"status\" value\n          let colorClass = 'unknown-color';\n          if (status === 'Placed') {\n            colorClass = 'placed-color';\n          } else if (status === 'Not Placed') {\n            colorClass = 'not-placed-color';\n          }\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `number-button ${colorClass}`,\n            onClick: () => this.openDialog(button, button),\n            children: button\n          }, button, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), showDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialogbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dialogData.buttonLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [dialogData.label1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: dialogData.value1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [dialogData.label2, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: dialogData.value2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: this.closeDialog,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), dialogData.value2 === 'NULL' ?\n        /*#__PURE__*/\n        // Check the status and render the appropriate button\n        _jsxDEV(\"button\", {\n          className: \"scan-button\",\n          onClick: this.toggleScanner,\n          children: \"Scan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reject-button\",\n          onClick: () => this.handleReject(dialogData.buttonLabel),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), showScanner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner\",\n        children: /*#__PURE__*/_jsxDEV(Scanner, {\n          redNo: dialogData.buttonLabel,\n          onSave: this.handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), showSubmissionDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialogbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dialogData.buttonLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [dialogData.label1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.submittedMNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [dialogData.label2, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.submittedTraceability\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: this.closeSubmissionDialog,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ColorTiles;","map":{"version":3,"names":["React","Component","Scanner","jsxDEV","_jsxDEV","ColorTiles","constructor","props","openDialog","buttonLabel","redNo","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","setState","showDialog","dialogData","label1","value1","MNo","label2","value2","TrNo","console","error","catch","closeDialog","closeSubmissionDialog","showSubmissionDialog","toggleScanner","showScanner","handleSave","firstValue","secondValue","submittedMNumber","submittedTraceability","redNoForSubmission","log","message","prevState","updatedBlockStatus","blockStatus","map","block","RedNo","Status","handleReject","state","number","buttons","OAN","componentDidMount","redNoValues","statusResponse","render","className","children","button","index","find","status","colorClass","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSave"],"sources":["E:/Internship/tp2/src/ColorTiles.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './ColorTiles.css'; // Import your global CSS file\r\nimport Scanner from './scanner';\r\n\r\nclass ColorTiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      number: '',\r\n      buttons: [],\r\n      showDialog: false,\r\n      dialogData: {},\r\n      showScanner: false,\r\n      showSubmissionDialog: false, // New state for the submission dialog\r\n      submittedMNumber: '', // State to store submitted M Number\r\n      submittedTraceability: '', // State to store submitted Traceability\r\n      OAN:'',\r\n      blockStatus: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Fetch the total count of blocks from the database\r\n    const response = await fetch('http://localhost:5000/getTotalBlockCount'); // Replace with your server endpoint\r\n    const data = await response.json();\r\n    const redNoValues = data.redNoValues;\r\n\r\n    // Fetch block statuses for the specified OAN\r\n    const statusResponse = await fetch('http://localhost:5000/getBlockStatus'); // Replace with your server endpoint\r\n    const blockStatus = await statusResponse.json();\r\n\r\n    // Generate buttons based on the total block count\r\n   // const buttons = Array.from({ length: totalBlockCount }, (_, i) => i + 1);\r\n\r\n    this.setState({ buttons : redNoValues, blockStatus: blockStatus, }); \r\n  }\r\n\r\n  openDialog = (buttonLabel, redNo) => {\r\n    // Fetch MNo and TrNo values from the database\r\n    fetch('http://localhost:5000/getBlockAttributes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        redNo,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          this.setState({\r\n            showDialog: true,\r\n            dialogData: {\r\n              label1: 'M Number',\r\n              value1: data.MNo || 'NULL',\r\n              label2: 'Traceability',\r\n              value2: data.TrNo || 'NULL',\r\n              buttonLabel,\r\n            },\r\n            redNo,\r\n          });\r\n        } else {\r\n          console.error('Error fetching block attributes:', data.error);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  closeDialog = () => {\r\n    this.setState({ showDialog: false });\r\n  };\r\n\r\n  closeSubmissionDialog = () => {\r\n    this.setState({ showSubmissionDialog: false });\r\n  };\r\n\r\n  toggleScanner = () => {\r\n    this.setState({ showDialog: false });\r\n    this.setState({ showScanner: true });\r\n  };\r\n\r\n  // Callback function to handle submission of firstValue and secondValue\r\n  handleSave = (redNo, firstValue, secondValue) => {\r\n    this.setState({\r\n      showScanner: false,\r\n      showSubmissionDialog: true,\r\n      submittedMNumber: firstValue,\r\n      submittedTraceability: secondValue,\r\n      redNoForSubmission: redNo,\r\n    });\r\n\r\n    // Make a POST request to update the block attributes\r\n    fetch('http://localhost:5000/updateBlockAttributes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        redNo,\r\n        MNo: firstValue,\r\n        TrNo: secondValue,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle success or error response, e.g., show a message to the user\r\n        console.log(data.message);\r\n\r\n         // Update the UI to reflect the rejection\r\n         this.setState((prevState) => {\r\n          const updatedBlockStatus = prevState.blockStatus.map((block) => {\r\n            if (block.RedNo === redNo) {\r\n              return { ...block, Status: 'Placed' };\r\n            }\r\n            return block;\r\n          });\r\n          return { blockStatus: updatedBlockStatus };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      })\r\n  };\r\n\r\n\r\n  handleReject = (redNo) => {\r\n    this.setState({\r\n      showDialog: false,\r\n    });\r\n    // Make a POST request to reject the block attributes\r\n    fetch('http://localhost:5000/rejectBlockAttributes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        redNo,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle success or error response, e.g., show a message to the user\r\n        console.log(data.message);\r\n  \r\n        // Update the UI to reflect the rejection\r\n        this.setState((prevState) => {\r\n          const updatedBlockStatus = prevState.blockStatus.map((block) => {\r\n            if (block.RedNo === redNo) {\r\n              return { ...block, Status: 'Not Placed' };\r\n            }\r\n            return block;\r\n          });\r\n          return { blockStatus: updatedBlockStatus };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      buttons,\r\n      showDialog,\r\n      dialogData,\r\n      showScanner,\r\n      showSubmissionDialog,\r\n      blockStatus,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"ColorTiles\">\r\n        <div className=\"buttons-container\">\r\n          {buttons.map((button, index) => {\r\n             // Find the status of the corresponding block\r\n             const block = blockStatus.find((block) => block.RedNo === button);\r\n             const status = block ? block.Status : 'unknown';\r\n \r\n             // Determine the color based on the \"status\" value\r\n             let colorClass = 'unknown-color';\r\n             if (status === 'Placed') {\r\n               colorClass = 'placed-color';\r\n             } \r\n             else if (status === 'Not Placed') {\r\n               colorClass = 'not-placed-color';\r\n             }\r\n\r\n          return (\r\n            <button\r\n              key={button}\r\n              className={`number-button ${colorClass}`}\r\n              onClick={() => this.openDialog(button, button)}\r\n            >\r\n              {button}\r\n            </button>\r\n          );\r\n        })}\r\n        </div>\r\n        \r\n        {showDialog && \r\n          <div className=\"dialogbox\">\r\n            <h2>{dialogData.buttonLabel}</h2>\r\n            <div>\r\n              <label>{dialogData.label1}:</label>\r\n              <span>{dialogData.value1}</span>\r\n            </div>\r\n            <div>\r\n              <label>{dialogData.label2}:</label>\r\n              <span>{dialogData.value2}</span>\r\n            </div>\r\n\r\n            <button className=\"close-button\" onClick={this.closeDialog}>\r\n              Close\r\n            </button>\r\n            \r\n            { (dialogData.value2 === 'NULL') ? (  // Check the status and render the appropriate button\r\n              <button className=\"scan-button\" onClick={this.toggleScanner}>\r\n              Scan\r\n              </button>\r\n              ) : (\r\n              <button className=\"reject-button\" onClick={() => this.handleReject(dialogData.buttonLabel)}>\r\n                Reject\r\n              </button>\r\n            )}\r\n          </div>\r\n        }\r\n       \r\n        {showScanner && (\r\n          <div className=\"scanner\">\r\n          <Scanner redNo={dialogData.buttonLabel} onSave={this.handleSave} />\r\n        </div>\r\n        )}\r\n\r\n        {showSubmissionDialog && (\r\n          <div className=\"dialogbox\">\r\n            <h2>{dialogData.buttonLabel}</h2>\r\n            <div>\r\n              <label>{dialogData.label1}:</label>\r\n              <span>{this.state.submittedMNumber}</span>\r\n            </div>\r\n            <div>\r\n              <label>{dialogData.label2}:</label>\r\n              <span>{this.state.submittedTraceability}</span>\r\n            </div>\r\n            <button className=\"submit-button\" onClick={this.closeSubmissionDialog}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorTiles;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
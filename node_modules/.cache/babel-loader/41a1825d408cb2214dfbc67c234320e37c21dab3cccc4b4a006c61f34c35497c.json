{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('File uploaded successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('File upload failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\n\n/*const FileUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const onFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const onFileUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('File uploaded successfully.');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  const fileName = selectedFile ? selectedFile.name : '';\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <div className=\"dashed-box\" onDrop={onFileChange}>\r\n\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        id=\"fileInput\"\r\n        onChange={onFileChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      <label htmlFor=\"fileInput\" className=\"choose-file-button\">\r\n        Choose File\r\n      </label>\r\n      <div className=\"buttons-container\">\r\n        {selectedFile && (\r\n          <>\r\n            <button className=\"cancel-button\" onClick={onCancel}>\r\n              Cancel\r\n            </button>\r\n            <button className=\"upload-button\" onClick={onFileUpload}>\r\n              Upload\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      {fileName && (\r\n        <p className=\"selected-file\">Selected file: {fileName}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;*/\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './upload.css';\r\n\r\nfunction FileUpload() {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  \r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      alert('File uploaded successfully!');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('File upload failed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1> File Upload</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n\r\n/*const FileUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const onFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const onFileUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('File uploaded successfully.');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  const fileName = selectedFile ? selectedFile.name : '';\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <div className=\"dashed-box\" onDrop={onFileChange}>\r\n\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        id=\"fileInput\"\r\n        onChange={onFileChange}\r\n        style={{ display: 'none' }}\r\n      />\r\n      <label htmlFor=\"fileInput\" className=\"choose-file-button\">\r\n        Choose File\r\n      </label>\r\n      <div className=\"buttons-container\">\r\n        {selectedFile && (\r\n          <>\r\n            <button className=\"cancel-button\" onClick={onCancel}>\r\n              Cancel\r\n            </button>\r\n            <button className=\"upload-button\" onClick={onFileUpload}>\r\n              Upload\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      {fileName && (\r\n        <p className=\"selected-file\">Selected file: {fileName}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAE7B,IAAI;MACF,MAAML,KAAK,CAACe,IAAI,CAAC,8BAA8B,EAAEH,QAAQ,EAAE;QACzDI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFC,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBD,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEf,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEnB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDtB,OAAA;MAAQyB,OAAO,EAAEhB,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACpB,EAAA,CAhCQD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAkCnB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
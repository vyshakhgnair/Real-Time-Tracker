{"ast":null,"code":"import { Html5QrcodeScanType, Html5QrcodeConstants } from \"../../core\";\nvar ScanTypeSelector = function () {\n  function ScanTypeSelector(supportedScanTypes) {\n    this.supportedScanTypes = this.validateAndReturnScanTypes(supportedScanTypes);\n  }\n  ScanTypeSelector.prototype.getDefaultScanType = function () {\n    return this.supportedScanTypes[0];\n  };\n  ScanTypeSelector.prototype.hasMoreThanOneScanType = function () {\n    return this.supportedScanTypes.length > 1;\n  };\n  ScanTypeSelector.prototype.isCameraScanRequired = function () {\n    for (var _i = 0, _a = this.supportedScanTypes; _i < _a.length; _i++) {\n      var scanType = _a[_i];\n      if (ScanTypeSelector.isCameraScanType(scanType)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  ScanTypeSelector.isCameraScanType = function (scanType) {\n    return scanType === Html5QrcodeScanType.SCAN_TYPE_CAMERA;\n  };\n  ScanTypeSelector.isFileScanType = function (scanType) {\n    return scanType === Html5QrcodeScanType.SCAN_TYPE_FILE;\n  };\n  ScanTypeSelector.prototype.validateAndReturnScanTypes = function (supportedScanTypes) {\n    if (!supportedScanTypes || supportedScanTypes.length === 0) {\n      return Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE;\n    }\n    var maxExpectedValues = Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE.length;\n    if (supportedScanTypes.length > maxExpectedValues) {\n      throw \"Max \".concat(maxExpectedValues, \" values expected for \") + \"supportedScanTypes\";\n    }\n    for (var _i = 0, supportedScanTypes_1 = supportedScanTypes; _i < supportedScanTypes_1.length; _i++) {\n      var scanType = supportedScanTypes_1[_i];\n      if (!Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE.includes(scanType)) {\n        throw \"Unsupported scan type \".concat(scanType);\n      }\n    }\n    return supportedScanTypes;\n  };\n  return ScanTypeSelector;\n}();\nexport { ScanTypeSelector };","map":{"version":3,"names":["Html5QrcodeScanType","Html5QrcodeConstants","ScanTypeSelector","supportedScanTypes","validateAndReturnScanTypes","prototype","getDefaultScanType","hasMoreThanOneScanType","length","isCameraScanRequired","_i","_a","scanType","isCameraScanType","SCAN_TYPE_CAMERA","isFileScanType","SCAN_TYPE_FILE","DEFAULT_SUPPORTED_SCAN_TYPE","maxExpectedValues","concat","supportedScanTypes_1","includes"],"sources":["../../../../src/ui/scanner/scan-type-selector.ts"],"sourcesContent":[null],"mappings":"AAUA,SACIA,mBAAmB,EACnBC,oBAAoB,QACjB,YAAY;AAGnB,IAAAC,gBAAA;EAGI,SAAAA,iBAAYC,kBAAoD;IAC5D,IAAI,CAACA,kBAAkB,GAAG,IAAI,CAACC,0BAA0B,CACrDD,kBAAkB,CAAC;EAC3B;EAMOD,gBAAA,CAAAG,SAAA,CAAAC,kBAAkB,GAAzB;IACI,OAAO,IAAI,CAACH,kBAAkB,CAAC,CAAC,CAAC;EACrC,CAAC;EAMMD,gBAAA,CAAAG,SAAA,CAAAE,sBAAsB,GAA7B;IACI,OAAO,IAAI,CAACJ,kBAAkB,CAACK,MAAM,GAAG,CAAC;EAC7C,CAAC;EAGMN,gBAAA,CAAAG,SAAA,CAAAI,oBAAoB,GAA3B;IACI,KAAuB,IAAAC,EAAA,IAAuB,EAAvBC,EAAA,OAAI,CAACR,kBAAkB,EAAvBO,EAAA,GAAAC,EAAA,CAAAH,MAAuB,EAAvBE,EAAA,EAAuB,EAAE;MAA3C,IAAME,QAAQ,GAAAD,EAAA,CAAAD,EAAA;MACf,IAAIR,gBAAgB,CAACW,gBAAgB,CAACD,QAAQ,CAAC,EAAE;QAC7C,OAAO,IAAI;;;IAGnB,OAAO,KAAK;EAChB,CAAC;EAGaV,gBAAA,CAAAW,gBAAgB,GAA9B,UAA+BD,QAA6B;IACxD,OAAOA,QAAQ,KAAKZ,mBAAmB,CAACc,gBAAgB;EAC5D,CAAC;EAGaZ,gBAAA,CAAAa,cAAc,GAA5B,UAA6BH,QAA6B;IACtD,OAAOA,QAAQ,KAAKZ,mBAAmB,CAACgB,cAAc;EAC1D,CAAC;EAQOd,gBAAA,CAAAG,SAAA,CAAAD,0BAA0B,GAAlC,UACID,kBAA8C;IAG9C,IAAI,CAACA,kBAAkB,IAAIA,kBAAkB,CAACK,MAAM,KAAK,CAAC,EAAE;MACxD,OAAOP,oBAAoB,CAACgB,2BAA2B;;IAI3D,IAAIC,iBAAiB,GACfjB,oBAAoB,CAACgB,2BAA2B,CAACT,MAAM;IAC7D,IAAIL,kBAAkB,CAACK,MAAM,GAAGU,iBAAiB,EAAE;MAC/C,MAAM,OAAAC,MAAA,CAAOD,iBAAiB,0BAAuB,GAC/C,oBAAoB;;IAI9B,KAAuB,IAAAR,EAAA,IAAkB,EAAlBU,oBAAA,GAAAjB,kBAAkB,EAAlBO,EAAA,GAAAU,oBAAA,CAAAZ,MAAkB,EAAlBE,EAAA,EAAkB,EAAE;MAAtC,IAAME,QAAQ,GAAAQ,oBAAA,CAAAV,EAAA;MACf,IAAI,CAACT,oBAAoB,CAACgB,2BAA2B,CAC5CI,QAAQ,CAACT,QAAQ,CAAC,EAAE;QACzB,MAAM,yBAAAO,MAAA,CAAyBP,QAAQ,CAAE;;;IAIjD,OAAOT,kBAAkB;EAC7B,CAAC;EAEL,OAAAD,gBAAC;AAAD,CAAC,CA7ED"},"metadata":{},"sourceType":"module","externalDependencies":[]}
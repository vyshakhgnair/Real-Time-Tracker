{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\BoxText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextBoxRow from './TextBoxRow';\nimport './BoxText.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoxText = () => {\n  _s();\n  const [rowCount, setRowCount] = useState(1); // Initial row count\n\n  const handleRowCountChange = event => {\n    const newRowCount = parseInt(event.target.value, 10) || 0;\n    setRowCount(newRowCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BoxText\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"labels\",\n      children: \" No: of series:  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: rowCount,\n      onChange: handleRowCountChange,\n      min: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), Array.from({\n      length: rowCount\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(TextBoxRow, {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(BoxText, \"6FU/vN/BhFaOBZbcJS1ifG3zEDs=\");\n_c = BoxText;\nexport default BoxText;\nvar _c;\n$RefreshReg$(_c, \"BoxText\");","map":{"version":3,"names":["React","useState","TextBoxRow","jsxDEV","_jsxDEV","BoxText","_s","rowCount","setRowCount","handleRowCountChange","event","newRowCount","parseInt","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","Array","from","length","map","_","index","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/BoxText.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TextBoxRow from './TextBoxRow';\r\nimport './BoxText.css';\r\n\r\nconst BoxText = () => {\r\n  const [rowCount, setRowCount] = useState(1); // Initial row count\r\n\r\n  const handleRowCountChange = (event) => {\r\n    const newRowCount = parseInt(event.target.value, 10) || 0;\r\n    setRowCount(newRowCount);\r\n  };\r\n\r\n  return (\r\n    <div className=\"BoxText\">\r\n    <label className=\"labels\"> No: of series:  </label>\r\n    <input\r\n        type=\"number\"\r\n        value={rowCount}\r\n        onChange={handleRowCountChange}\r\n        min=\"0\"\r\n    />\r\n        \r\n    {Array.from({ length: rowCount }).map((_, index) => (\r\n        <TextBoxRow key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoxText;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE7C,MAAMQ,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,WAAW,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC;IACzDN,WAAW,CAACG,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAKW,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACxBZ,OAAA;MAAOW,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnDhB,OAAA;MACIiB,IAAI,EAAC,QAAQ;MACbP,KAAK,EAAEP,QAAS;MAChBe,QAAQ,EAAEb,oBAAqB;MAC/Bc,GAAG,EAAC;IAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EAEDI,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEnB;IAAS,CAAC,CAAC,CAACoB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC3CzB,OAAA,CAACF,UAAU,MAAM2B,KAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CAvBID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\ProgBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ActBlock from './ActBlock';\nimport axios from 'axios';\nimport './ProgBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgBar = ({\n  sgid\n}) => {\n  _s();\n  const [PB, setPB] = useState(0);\n  const [TB, setTB] = useState(0);\n  // Simulate a calculated value change (replace this with your actual calculation)\n\n  useEffect(() => {\n    async function fetchTotalBlocks() {\n      try {\n        const response = await axios.get(`http://localhost:5000/totalBlocksClient/${sgid}`); // Use Axios for GET request\n        setTB(response.data.TB);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    }\n    fetchTotalBlocks();\n  }, [sgid]);\n  useEffect(() => {\n    async function fetchPlacedBlocks() {\n      try {\n        const response = await axios.get(`http://localhost:5000/placedBlocksClient/${sgid}`); // Use Axios for GET request\n        setPB(response.data.PB);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    }\n    fetchPlacedBlocks();\n  }, [sgid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProgBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Active Blocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActBlock, {\n      calculatedValue: PB,\n      maxValue: TB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgBar, \"Kh2Ltd+Kmm1iJV6Z2DSoE70H0gw=\");\n_c = ProgBar;\nexport default ProgBar;\nvar _c;\n$RefreshReg$(_c, \"ProgBar\");","map":{"version":3,"names":["React","useState","useEffect","ActBlock","axios","jsxDEV","_jsxDEV","ProgBar","sgid","_s","PB","setPB","TB","setTB","fetchTotalBlocks","response","get","data","error","console","fetchPlacedBlocks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculatedValue","maxValue","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/ProgBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ActBlock from './ActBlock';\r\nimport axios from 'axios'\r\nimport './ProgBar.css';\r\n\r\nconst ProgBar = ({sgid}) => {\r\n  const [PB, setPB] = useState(0);\r\n  const [TB, setTB] = useState(0);\r\n  // Simulate a calculated value change (replace this with your actual calculation)\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalBlocks() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/totalBlocksClient/${sgid}`); // Use Axios for GET request\r\n        setTB(response.data.TB);\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n      }\r\n    }\r\n\r\n    fetchTotalBlocks();\r\n  }, [sgid]);\r\n\r\n  useEffect(() => {\r\n    async function fetchPlacedBlocks() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/placedBlocksClient/${sgid}`); // Use Axios for GET request\r\n        setPB(response.data.PB);\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n      }\r\n    }\r\n\r\n    fetchPlacedBlocks();\r\n  }, [sgid]);\r\n\r\n  return (\r\n    <div className=\"ProgBar\">\r\n      <h3>Active Blocks</h3>\r\n      <ActBlock calculatedValue={PB} maxValue={TB} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACW,EAAE,EAAEC,KAAK,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC/B;;EAEAC,SAAS,CAAC,MAAM;IACd,eAAeY,gBAAgBA,CAAA,EAAG;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,2CAA0CR,IAAK,EAAC,CAAC,CAAC,CAAC;QACrFK,KAAK,CAACE,QAAQ,CAACE,IAAI,CAACL,EAAE,CAAC;MACzB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;IAEAJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEVN,SAAS,CAAC,MAAM;IACd,eAAekB,iBAAiBA,CAAA,EAAG;MACjC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,4CAA2CR,IAAK,EAAC,CAAC,CAAC,CAAC;QACtFG,KAAK,CAACI,QAAQ,CAACE,IAAI,CAACP,EAAE,CAAC;MACzB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;IAEAE,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAKe,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA,CAACH,QAAQ;MAACwB,eAAe,EAAEjB,EAAG;MAACkB,QAAQ,EAAEhB;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACjB,EAAA,CArCIF,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
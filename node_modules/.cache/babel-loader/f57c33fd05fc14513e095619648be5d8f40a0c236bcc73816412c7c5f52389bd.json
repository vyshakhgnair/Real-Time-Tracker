{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\modelProgBar2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios\nimport ActBlock from './modelProg';\nimport './modelProgBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgBar = () => {\n  _s();\n  const [calculatedValue, setCalculatedValue] = useState(0);\n  const [OAN, setOAN] = useState('');\n  const [TB, setTB] = useState(0);\n  useEffect(() => {\n    async function fetchMaxPercentageOAN() {\n      try {\n        const response = await axios.get('http://localhost:5000/maxPercentageOAN2'); // Use Axios for GET request\n        setOAN(response.data.OAN);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    }\n    fetchMaxPercentageOAN();\n  }, []);\n  useEffect(() => {\n    async function fetchTotalBlocks() {\n      try {\n        const response = await axios.get('http://localhost:5000/totalBlocks2'); // Use Axios for GET request\n        setTB(response.data.TB);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    }\n    fetchTotalBlocks();\n  }, []);\n  useEffect(() => {\n    async function fetchPlacedBlocks() {\n      try {\n        const response = await axios.get('http://localhost:5000/placedBlocks2'); // Use Axios for GET request\n        setCalculatedValue(response.data.PB);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    }\n    fetchPlacedBlocks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProgBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: OAN\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActBlock, {\n      calculatedValue: calculatedValue,\n      maxValue: TB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgBar, \"leLLXm37qZYP8ukyu5ZNrtoWYuY=\");\n_c = ProgBar;\nexport default ProgBar;\nvar _c;\n$RefreshReg$(_c, \"ProgBar\");","map":{"version":3,"names":["React","useState","useEffect","axios","ActBlock","jsxDEV","_jsxDEV","ProgBar","_s","calculatedValue","setCalculatedValue","OAN","setOAN","TB","setTB","fetchMaxPercentageOAN","response","get","data","error","console","fetchTotalBlocks","fetchPlacedBlocks","PB","className","children","fileName","_jsxFileName","lineNumber","columnNumber","maxValue","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/modelProgBar2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import Axios\r\nimport ActBlock from './modelProg';\r\nimport './modelProgBar.css';\r\n\r\nconst ProgBar = () => {\r\n  const [calculatedValue, setCalculatedValue] = useState(0);\r\n  const [OAN, setOAN] = useState('');\r\n  const [TB, setTB] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function fetchMaxPercentageOAN() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/maxPercentageOAN2'); // Use Axios for GET request\r\n        setOAN(response.data.OAN);\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n      }\r\n    }\r\n\r\n    fetchMaxPercentageOAN();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalBlocks() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/totalBlocks2'); // Use Axios for GET request\r\n        setTB(response.data.TB);\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n      }\r\n    }\r\n\r\n    fetchTotalBlocks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchPlacedBlocks() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/placedBlocks2'); // Use Axios for GET request\r\n        setCalculatedValue(response.data.PB);\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n      }\r\n    }\r\n\r\n    fetchPlacedBlocks();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"ProgBar\">\r\n      <h3>{OAN}</h3>\r\n      <ActBlock calculatedValue={calculatedValue} maxValue={TB} />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProgBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,EAAE,EAAEC,KAAK,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACd,eAAea,qBAAqBA,CAAA,EAAG;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,yCAAyC,CAAC,CAAC,CAAC;QAC7EL,MAAM,CAACI,QAAQ,CAACE,IAAI,CAACP,GAAG,CAAC;MAC3B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;IAEAJ,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,eAAemB,gBAAgBA,CAAA,EAAG;MAChC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACxEH,KAAK,CAACE,QAAQ,CAACE,IAAI,CAACL,EAAE,CAAC;MACzB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;IAEAE,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,eAAeoB,iBAAiBA,CAAA,EAAG;MACjC,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,qCAAqC,CAAC,CAAC,CAAC;QACzEP,kBAAkB,CAACM,QAAQ,CAACE,IAAI,CAACK,EAAE,CAAC;MACtC,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;IAEAG,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBnB,OAAA;MAAAmB,QAAA,EAAKd;IAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACdvB,OAAA,CAACF,QAAQ;MAACK,eAAe,EAAEA,eAAgB;MAACqB,QAAQ,EAAEjB;IAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAGV,CAAC;AAACrB,EAAA,CApDID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAsDb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Internship\\\\tp2\\\\src\\\\scanner.js\",\n  _s = $RefreshSig$();\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { useEffect, useState } from 'react';\nimport './scanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scanner({\n  redNo,\n  onSave\n}) {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  const [firstValue, setFirstValue] = useState(null);\n  const [secondValue, setSecondValue] = useState(null);\n  const [rescan, setRescan] = useState(false);\n  useEffect(() => {\n    const scanner = new Html5QrcodeScanner('reader', {\n      qrbox: {\n        width: 300,\n        height: 300\n      },\n      fps: 5\n    });\n    scanner.render(success, error);\n    function success(result) {\n      scanner.clear();\n      setScanResult(result);\n\n      // Check if the result matches the specific format \"164066/3\"\n      const formatRegex = /^(\\d+)\\/(\\d+)$/;\n      const match = result.match(formatRegex);\n      if (match) {\n        const first = match[1];\n        const second = match[2];\n        setFirstValue(first);\n        setSecondValue(second);\n        if (first === null || second === null) {\n          // Do something with the values\n          setRescan(true);\n        }\n      }\n    }\n    function error(err) {\n      console.warn(err);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Scanner\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), scanResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-result\",\n      children: [\"Success: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: scanResult,\n        children: scanResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }, this), firstValue && secondValue && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"M Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: firstValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Traceability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: secondValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), rescan && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rescan-button\",\n          onClick: () => setScanResult(null),\n          children: \"Scan Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), !rescan && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: () => onSave(redNo, firstValue, secondValue),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Scanner, \"1Tw5rqfX/uq06DXlT+mVYtY3m4s=\");\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["Html5QrcodeScanner","useEffect","useState","jsxDEV","_jsxDEV","Scanner","redNo","onSave","_s","scanResult","setScanResult","firstValue","setFirstValue","secondValue","setSecondValue","rescan","setRescan","scanner","qrbox","width","height","fps","render","success","error","result","clear","formatRegex","match","first","second","err","console","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","id","_c","$RefreshReg$"],"sources":["E:/Internship/tp2/src/scanner.js"],"sourcesContent":["import { Html5QrcodeScanner } from 'html5-qrcode';\r\nimport { useEffect, useState } from 'react';\r\nimport './scanner.css';\r\n\r\n\r\nfunction Scanner( { redNo, onSave } ) {\r\n  const [ scanResult,setScanResult]=useState(null);\r\n  const [firstValue, setFirstValue] = useState(null);\r\n  const [secondValue, setSecondValue] = useState(null);\r\n  const [rescan, setRescan] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const scanner=new Html5QrcodeScanner('reader',{\r\n      qrbox:{\r\n        width:300,\r\n        height:300,\r\n      },\r\n      fps:5,\r\n    });\r\n   \r\n    scanner.render(success,error);\r\n    \r\n    function success(result) {\r\n      scanner.clear();\r\n      setScanResult(result);\r\n\r\n      // Check if the result matches the specific format \"164066/3\"\r\n      const formatRegex = /^(\\d+)\\/(\\d+)$/;\r\n      const match = result.match(formatRegex);\r\n\r\n      if (match) {\r\n        const first = match[1];\r\n        const second = match[2];\r\n        setFirstValue(first);\r\n        setSecondValue(second);\r\n        if (first===null || second===null) {\r\n          // Do something with the values\r\n          setRescan(true);\r\n        } \r\n      }\r\n    }\r\n  \r\n    function error(err){\r\n      console.warn(err);\r\n  \r\n    }\r\n\r\n  },[]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"Scanner\">\r\n    <h1>QR Scanner</h1>\r\n    {scanResult ? (\r\n      <div className=\"scanner-result\">\r\n        Success: <a href={scanResult}>{scanResult}</a>\r\n        {firstValue && secondValue && (\r\n          <div>\r\n            <div>\r\n              <label>M Number:</label>\r\n              <span>{firstValue}</span>\r\n            </div>\r\n            <div>\r\n              <label>Traceability:</label>\r\n              <span>{secondValue}</span>\r\n            </div>\r\n            {rescan && (\r\n              <button className=\"rescan-button\" onClick={() => setScanResult(null)}>Scan Again</button>\r\n            )}\r\n            {!rescan && (\r\n              <button className=\"save-button\" onClick={() => onSave(redNo, firstValue, secondValue)}>Save</button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    ) : (\r\n      <div id=\"reader\"></div>\r\n    )}\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Scanner;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}